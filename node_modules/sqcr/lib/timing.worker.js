!function(e){var t={};function s(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)s.d(r,i,function(t){return e[t]}.bind(null,i));return r},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=3)}([function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.Dispatcher=class{constructor(){const e=document.createTextNode(null);this.addEventListener=e.addEventListener.bind(e),this.removeEventListener=e.removeEventListener.bind(e),this.dispatchEvent=e.dispatchEvent.bind(e)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=s(0);t.EventEmitter=class{constructor(e){this.dispatcher=e||new r.Dispatcher}on(e,t){this.dispatcher.addEventListener(e,t)}emit(e,t){const s=new CustomEvent(e,t);this.dispatcher.dispatchEvent(s)}off(e,t){this.dispatcher.removeEventListener(e,t)}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=s(1),i=60,n=e=>Math.round(6e4/e/48);class a{constructor(e){this.tick=0,this.lastTickSent=-1,this.interval=n(i),this.bpm=i,this.scheduleTicks=(()=>{let e=1,t=0;for(;e<a.DEFAULT_TICKS_TO_SCHEDULE;){const s=e*this.interval,r=this.getTick()+e;if(this.scheduledTicks.has(r));else{setTimeout(()=>{this.sendToTransport("tick"),this.incrementTick(),this.scheduledTicks.delete(r)},s);this.scheduledTicks.add(r)}e++,t+=s}}),this.timerID=0,this.scheduledTicks=new Set,this.ctx=e}onError(e){this.ctx.postMessage({event:"error",message:e})}onEvent(e){const t=e.data&&e.data.action||"error";if("error"!==t)switch(t){case"start":this.start(e.data.payload);break;case"updateInterval":this.updateInterval(e.data.payload);break;case"stop":this.stop();break;default:console.warn("Worker received unhandled action: "+t)}else this.onError(`Unsupport timing action ${t}`)}setBPM({bpm:e}){this.bpm=e,this.interval=n(e)}updateInterval({bpm:e}){this.clearScheduledTicks(),this.setBPM({bpm:e});const t=a.DEFAULT_TICK_RESOLUTION*this.interval;this.timerID=setInterval(()=>{this.scheduleTicks()},t)}start({bpm:e}){this.updateInterval({bpm:e})}stop(){this.clearScheduledTicks()}clearScheduledTicks(){this.scheduledTicks.forEach(e=>{clearTimeout(e),this.scheduledTicks.delete(e)}),clearInterval(this.timerID),this.timerID=0}incrementTick(){this.tick++}getTick(){return this.tick}sendToTransport(e,t){this.ctx.postMessage({action:e,payload:t})}}a.DEFAULT_TICK_RESOLUTION=48,a.DEFAULT_LOOKAHEAD_MS=1e3,a.DEFAULT_TICKS_TO_SCHEDULE=100,t.bindTimingWorkerOnMessageHandler=(e=>{const t=new a(e);return e=>{try{t.onEvent(e)}catch(e){t.onError(e.message)}}});class o{constructor(e={}){this.events=null,this.beat=0,this.tick=0,this.bpm=i,this.onMessage=(e=>{const t=o.EVENTS,s=e.name||e.data.action;switch(s){case"beat":this.incrementBeat(),this.events.emit(t.BEAT,e.data.payload);break;case"tick":this.incrementTick(),this.events.emit(t.TICK,e.data.payload);break;case"processLoops":this.events.emit(t.PROCESS_LOOPS,e.data.payload);break;case"updateBPM":this.updateBPM(e.data.payload.bpm),this.events.emit(t.UPDATE_BPM,e.data.payload);break;case"start":this.start(e.data.payload),this.events.emit(t.START,e.data.payload);break;case"osc":this.receiveOSC(e.data.payload);case"stop":this.stop(),this.events.emit(t.STOP,e.data.payload);break;default:console.error("Unhandled transport event: ",s,e),this.stop()}}),this.events=new r.EventEmitter,this.bpm=e.bpm}tickToMS(){return n(this.bpm)}getTick(){return+this.tick}getBeat(){return+this.beat}getBPM(){return+this.bpm}incrementBeat(){this.beat++}incrementTick(){this.tick++}processLoops({tick:e}){console.log("TODO: processLoops!")}sendToWorker(e,t){this.timerWorker.postMessage({action:e,payload:t})}static toEvent(e){return{name:(e.address||"").split("/")[1],data:e}}bindTimerWorkerListeners(e,t){e.onmessage=(e=>{this.onMessage(e)}),e.onerror=t}startTimerWorker(e){this.timerWorker=e,this.bindTimerWorkerListeners(this.timerWorker,e=>{console.error("Worker error: ",e.message)}),this.start({bpm:this.bpm})}start({bpm:e}){this.sendToWorker("start",{bpm:e})}stop(){this.sendToWorker("stop",{})}updateBPM(e){this.sendToWorker("updateInterval",{bpm:e})}receiveOSC({message:e}){}}o.EVENTS={TICK:"TICK",BEAT:"BEAT",BUFFER:"BUFFER",PROCESS_LOOPS:"PROCESS_LOOPS",STOP:"STOP",START:"START",UPDATE_BPM:"UPDATE_BPM",OSC:"OSC",MIDI:"MIDI"},o.DEFAULT_TICK_RESOLUTION=48,o.DEFAULT_LOOKAHEAD_MS=1e3,o.DEFAULT_BPM=i,t.Transport=o,t.default=o},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=s(2),i=self;i.onmessage=r.bindTimingWorkerOnMessageHandler(i)}]);